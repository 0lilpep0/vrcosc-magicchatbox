<Window x:Class="vrcosc_magicchatbox.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:vrcosc_magicchatbox.Classes"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="MagicChatbox by BoiHanny" Height="752" Width="900"
        WindowStyle="None" Topmost="{Binding Topmost, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" ResizeMode="NoResize" AllowsTransparency="True" WindowStartupLocation="CenterScreen" IsEnabled="{Binding AppIsEnabled, UpdateSourceTrigger=PropertyChanged}" Opacity="{Binding AppOpacity, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Bottom">
    <i:Interaction.Behaviors>
        <local:CustomKeyBinding Key="V" Command="{Binding ToggleVoiceCommand}"/>
    </i:Interaction.Behaviors>
    <Window.Resources>
        <ResourceDictionary>
            <local:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
            <local:InverseBoolToHiddenConverter x:Key="InverseBoolToHiddenConverter" />
            <local:BoolToOpacityConverter x:Key="BoolToOpacityConverter" />
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
            <Style x:Key="Activatebutton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="5,0,0,5" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="#564BA0"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#564BA0"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="#5D559B"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#5D559B"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Favbutton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="0,5,5,0" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="#564BA0"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#564BA0"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="#5D559B"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#5D559B"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Deletebutton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="5,0,0,5" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="#564BA0"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#564BA0"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="#5D559B"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#5D559B"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Visibility="{Binding IntgrIntelliChat, Converter={StaticResource InverseBoolToHiddenConverter}, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1">
            <Border Visibility="{Binding IntgrIntelliWing, Converter={StaticResource InverseBoolToHiddenConverter}, UpdateSourceTrigger=PropertyChanged}" BorderBrush="#FF240E55" BorderThickness="1" Height="87" Margin="10,0,10,0" VerticalAlignment="Top"  CornerRadius="0,0,5,5">
                <Border.Effect>
                    <DropShadowEffect Color="#FF1B1BAF" RenderingBias="Quality" BlurRadius="8" ShadowDepth="0" Direction="-63" />
                </Border.Effect>
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.1,1">
                        <GradientStop Color="#FF251454"/>
                        <GradientStop Color="#FF1B0C3A" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Grid Margin="0,0,0,0">
                    <ItemsControl ItemsSource="{Binding OpenAIAPIBuiltInActions}" Tag="Chat">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" MaxWidth="900" />
                                <!-- Adjust MaxWidth based on the width of your buttons and the desired number of items per row -->
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Margin="3" Content="{Binding FriendlyName}"
                                Width="150"
                                Style="{StaticResource Status_Button_style_Small}"
                                Command="{Binding DataContext.YourCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                CommandParameter="{Binding}"
                                FontSize="10"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Border>
        </Grid>



        <Border Background="Transparent" Grid.Row="0" BorderBrush="#FF240E55" BorderThickness="1" Height="630" Margin="10,10,10,0" VerticalAlignment="Top">
            <Border.Effect>
                <DropShadowEffect Color="DarkBlue" RenderingBias="Quality" BlurRadius="15" ShadowDepth="0" Direction="-63" />
            </Border.Effect>
            <Grid Background="#FF3B3054">
                <Grid.RowDefinitions>
                    <RowDefinition Height="55"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid Background="#FF2D1267"
              Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="143"/>
                        <ColumnDefinition Width="123"/>
                        <ColumnDefinition Width="123"/>
                        <ColumnDefinition Width="122"/>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border>
                        <Grid x:Name="Drag_area" MouseDown="Drag_area_MouseDown">
                            <TextBlock Text="MagicChatbox" 
                                Foreground="White"
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Padding="0,12,0,0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" Direction="315" ShadowDepth="0" Opacity="1" BlurRadius="15" />
                                </TextBlock.Effect>
                            </TextBlock>
                            <TextBlock Text="VRC OSC" 
                                Foreground="MediumPurple"
                                Grid.Column="0"
                                VerticalAlignment="top"
                                HorizontalAlignment="left"
                                Padding="20,12,0,0"
                                FontSize="10"
                                FontFamily="Albert Sans Thin">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" Direction="315" ShadowDepth="0" Opacity="1" BlurRadius="15" />
                                </TextBlock.Effect>
                            </TextBlock>
                        </Grid>
                    </Border>

                    <Grid Grid.Column="1" Margin="3,0,3,0" >
                        <Button Style="{DynamicResource MenuItemStyle}" Name="MenuButton_0" Click="MenuButton_0_Click" Content="Integrations"
                    
                    Background="#FF240E55" 
                    Foreground="White" 
                    FontFamily="Comfortaa Light" 
                    FontSize="18" 
                    
                    FontWeight="Normal" Cursor="Hand" BorderThickness="0" Margin="0,0,0,0"
                    />
                        <Border Visibility="{Binding MenuItem_0_Visibility}" Background="#FFAEA7ED" IsHitTestVisible="False" Height="4" VerticalAlignment="Top" />
                    </Grid>
                    <Grid Grid.Column="2" Margin="3,0,3,0" >
                        <Button Style="{DynamicResource MenuItemStyle}" Name="MenuButton_1" Click="MenuButton_1_Click" Content="Status"
                    
                    Background="#FF240E55" 
                    Foreground="White" 
                    FontFamily="Comfortaa Light" 
                    FontSize="18" 
                    
                    FontWeight="Normal" Cursor="Hand" BorderThickness="0" Margin="0,0,0,0"
                    />
                        <Border Visibility="{Binding MenuItem_1_Visibility}" Background="#FFAEA7ED" IsHitTestVisible="False" Height="4" VerticalAlignment="Top" />
                    </Grid>
                    <Grid Grid.Column="3" Margin="3,0,3,0" >
                        <Button Style="{DynamicResource MenuItemStyle}" Name="MenuButton_2" Click="MenuButton_2_Click" Content="Chatting"
                    
                    Background="#FF240E55" 
                    Foreground="White" 
                    FontFamily="Comfortaa Light" 
                    FontSize="18" 
                    
                    FontWeight="Normal" Cursor="Hand" BorderThickness="0" Margin="0,0,0,0"
                    />
                        <Border Visibility="{Binding MenuItem_2_Visibility}" Background="#FFAEA7ED" IsHitTestVisible="False" Height="4" VerticalAlignment="Top" />
                    </Grid>
                    <Grid Grid.Column="4" Margin="3,0,3,0" >
                        <Button Style="{DynamicResource MenuItemStyle}" Name="MenuButton_3" Click="MenuButton_3_Click" Content="Options"
                    
                    Background="#FF240E55" 
                    Foreground="White" 
                    FontFamily="Comfortaa Light" 
                    FontSize="18" 
                    
                    FontWeight="Normal" Cursor="Hand" BorderThickness="0" Margin="0,0,0,0"
                    />
                        <Border Visibility="{Binding MenuItem_3_Visibility}" Background="#FFAEA7ED" IsHitTestVisible="False" Height="4" VerticalAlignment="Top" />
                    </Grid>
                    <Grid Grid.Column="5">
                        <StackPanel Background="#FF3B2075" Orientation="Vertical" Margin="3,0,0,0">
                            <TextBlock Text="Sent to VRChat" 
                                Foreground="#FFB3B0B9"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                FontSize="12"
                                FontFamily="Albert Sans Thin" Margin="0,5,0,0"/>
                            <CheckBox Style="{DynamicResource Switch}" Name="MasterSwitch" Click="MasterSwitch_Click" HorizontalAlignment="Center" IsChecked="{Binding MasterSwitch, Mode=TwoWay}" VerticalAlignment="Center" Margin="0,5,0,0" Opacity="0.75" Width="62"/>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="6" HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="45"/>
                            <ColumnDefinition Width="45"/>
                        </Grid.ColumnDefinitions>
                        <Button Style="{DynamicResource CloseButtonStyle}" Name="Button_close" Click="Button_close_Click" Grid.Column="1" Cursor="Hand" Height="22" Width="45" HorizontalAlignment="Center" VerticalAlignment="Top" Background="#004D0606" BorderThickness="0">
                            <Image Margin="2" Source="img/icons/Close_ico.png"></Image>
                        </Button>
                        <Button Style="{DynamicResource SubtractButtonStyle}" Name="Button_minimize" Click="Button_minimize_Click" Cursor="Hand" Height="22" Width="45" HorizontalAlignment="Center" VerticalAlignment="Top" Background="#00473C89" BorderThickness="0">
                            <Image Margin="2" Source="img/icons/subtract_ico.png"></Image>
                        </Button>
                    </Grid>

                </Grid>
                <Grid Grid.Row="1" Background="#FF3B3054" Visibility="{Binding MenuItem_1_Visibility}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="31"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="400"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="68"/>
                    </Grid.RowDefinitions>

                    <Grid Background="#FF41375C">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center"  HorizontalAlignment="Center">
                            <TextBlock Text="Here you can add ur personal message to the chatbox!" 
                                Foreground="#FF9983AD"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" 
                            />
                        </StackPanel>
                    </Grid>
                    <ScrollViewer Margin="10,0,0,0" Name="Statusitems" Visibility="Visible" Grid.Row="2">
                        <ItemsControl ItemsSource="{Binding StatusList}" Width="auto" Height="auto" Margin="5">
                            <ItemsControl.Resources>
                                <Style x:Key="ActiveStatusText" TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                                            <Setter Property="Foreground" Value="#FF9DDAA8"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsActive}" Value="False">
                                            <Setter Property="Foreground" Value="LightGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ItemsControl.Resources>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border CornerRadius="5" Background="DarkSlateBlue" Margin="5">
                                        <Border.Effect>
                                            <DropShadowEffect Color="DarkBlue" RenderingBias="Quality" BlurRadius="5" ShadowDepth="0" Direction="-23" />
                                        </Border.Effect>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="35"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="35" />
                                                <ColumnDefinition Width="507"/>
                                                <ColumnDefinition Width="35"/>
                                                <ColumnDefinition Width="35"/>
                                            </Grid.ColumnDefinitions>
                                            <Border Background="#3A1F73" Grid.Column="0" Grid.Row="0">
                                                <Image Source="/Img/Icons/ActivatedStatus_ico.png" Width="22" Height="22" Stretch="Uniform" />
                                            </Border>

                                            <Button x:Name="Deletebutton" Click="DeleteButton_Click" Tag="{Binding}" Cursor="Hand" Style="{DynamicResource Deletebutton}" BorderThickness="0" Height="35" Width="35" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" Background="#483472">
                                                <Grid>
                                                    <Image Width="20" Height="20" Source="/Img/Icons/Delete_ico.png"/>
                                                </Grid>
                                            </Button>


                                            <TextBlock Text="{Binding msg}" Grid.Row="0" FontSize="15" FontFamily="Comfortaa Light" Grid.Column="1" VerticalAlignment="Center" Margin="8,0,0,0" Style="{StaticResource ActiveStatusText}"/>
                                            <Button Cursor="Hand" Style="{DynamicResource Activatebutton}" Name="Activatebutton" BorderThickness="0" Height="35" Width="35" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="0" Command="{Binding DataContext.ActivateStatusCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" CommandParameter="{Binding}" Visibility="{Binding IsActive, Converter={StaticResource InverseBoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="0,0,0,0" Background="#3A1F73">
                                                <Image Source="/Img/Icons/ActivateStatus_ico.png" Width="22" Height="22" Stretch="Uniform"/>
                                            </Button>

                                            <Button Cursor="Hand" Style="{DynamicResource Favbutton}" Name="Favbutton" Click="Favbutton_Click" BorderThickness="0" Height="35" Width="35" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" Background="#3A1F73">
                                                <Grid>
                                                    <Image Width="22" Height="22">
                                                        <Image.Style>
                                                            <Style>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsFavorite}" Value="True">
                                                                        <Setter Property="Image.Source" Value="/Img/Icons/Unfavorite_ico.png"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding IsFavorite}" Value="False">
                                                                        <Setter Property="Image.Source" Value="/Img/Icons/Favorite_ico.png"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                    <CheckBox Height="35" Width="35" IsChecked="{Binding IsFavorite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Opacity="0"/>
                                                </Grid>
                                            </Button>

                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                    <Grid Height="68" Width="658" HorizontalAlignment="Left"  Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="550" />
                            <ColumnDefinition Width="150" />
                        </Grid.ColumnDefinitions>
                        <Button HorizontalAlignment="Left" Click="AddFav_Click" x:Name="AddFav" Content="Create" Style="{DynamicResource Status_Button_style}" Width="94" Margin="542,14,0,14" Grid.ColumnSpan="2"/>
                        <TextBox Height="40" KeyDown="FavBox_KeyDown" TextChanged="NewFavText_TextChanged" x:Name="NewFavText" Text="{Binding NewStatusItemTxt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="8,0,58,0" Background="#FF7B7195" TextAlignment="Left" BorderThickness="0" FontSize="15" Foreground="#FF240E54" Margin="15,0,0,0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center">
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </TextBox.Resources>
                            <TextBox.Effect>
                                <DropShadowEffect Color="DarkBlue" RenderingBias="Quality" BlurRadius="5" ShadowDepth="0" Direction="-23" />
                            </TextBox.Effect>
                        </TextBox>

                        <TextBlock Text="{Binding StatusBoxCount}" 
                       Foreground="{Binding StatusBoxColor}"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Right"
                       FontSize="12"
                       FontFamily="Albert Sans Thin" Padding="0,3,0,0" Margin="0,0,7,0"/>

                        <TextBlock IsHitTestVisible="False" Text="Create here a new status" VerticalAlignment="Center" TextAlignment="Left" FontSize="15" Height="40" Padding="8, 9, 5, 0"  Foreground="#FF3D2F5F" Margin="15,0,55,0">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=NewFavText}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=NewFavText, Path=IsFocused}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                    </Grid>
                    <Grid Background="#FF493F65" HorizontalAlignment="Stretch" Grid.Row="3">
                        <Grid.Effect>
                            <DropShadowEffect Color="#FF7F759A" RenderingBias="Quality" Opacity="0.5"  BlurRadius="10" ShadowDepth="5" Direction="90" />
                        </Grid.Effect>
                        <TextBlock Text="{Binding StatusTopBarTxt}" 
                                Foreground="#FF9983AD"
                                   HorizontalAlignment="Left"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" VerticalAlignment="Center" Margin="16,0,0,0" 
                            />

                    </Grid>
                    <Grid Background="#FF493F65" Grid.Row="1">
                        <Grid.Effect>
                            <DropShadowEffect Color="#FF7F759A" RenderingBias="Quality" Opacity="0.5"  BlurRadius="10" ShadowDepth="5" Direction="-90" />
                        </Grid.Effect>
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center">
                            <Button Click="SortUsed_Click" x:Name="SortUsed" Content="Recent used" Style="{DynamicResource Status_Button_style}" Height="25" Width="100" Margin="5,0,5,0"></Button>
                            <Button Click="SortFav_Click" x:Name="SortFav" Content="Favorites" Style="{DynamicResource Status_Button_style}" Height="25" Width="100" Margin="5,0,5,0"></Button>
                            <Button Click="SortDate_Click" x:Name="SortDate" Content="Create date" Style="{DynamicResource Status_Button_style}" Height="25" Width="100" Margin="5,0,5,0"></Button>
                        </StackPanel>
                    </Grid>
                </Grid>
                <Grid Grid.Row="1" Background="#FF3B3054" Visibility="{Binding MenuItem_0_Visibility}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="85"/>
                        <RowDefinition Height="85"/>
                        <RowDefinition Height="85"/>
                        <RowDefinition Height="85"/>
                    </Grid.RowDefinitions>

                    <Grid Visibility="{Binding Char_Limit}" Background="#FF41375C">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock Text="Some intergrations can't be showed because a limit on characters" 
                                Foreground="#FF9983AD"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" Margin="0,3,0,0" 
                            />
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Row="1" Opacity="{Binding Status_Opacity}">
                        <Border Margin="6" CornerRadius="5" Background="DarkSlateBlue" >
                            <Border.Effect>
                                <DropShadowEffect Color="DarkBlue" RenderingBias="Quality" BlurRadius="5" ShadowDepth="0" Direction="-23" />
                            </Border.Effect>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="85"/>
                                    <ColumnDefinition Width="440"/>
                                    <ColumnDefinition Width="123"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="Personal status"                                       
                                         Foreground="White"
                                         FontSize="20"
                                         FontFamily="Comfortaa Light" VerticalAlignment="Center" Margin="0,8,0,0"/>
                                    <TextBlock Grid.Row="1" Text="With this integration you can write an epic status that you want to show to everyone in game"                                       
                                         Foreground="LightGray"
                                         FontSize="13"
                                         FontFamily="Comfortaa Light" VerticalAlignment="Center" TextWrapping="Wrap" Margin="0,0,0,5"/>

                                </Grid>

                                <Image Grid.Column="0" Margin="15" Source="/Img/Icons/PersonalMsg_ico.png" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <CheckBox Style="{DynamicResource Switch}" Name="Status_Switch" Grid.Column="2" Click="Update_Click" HorizontalAlignment="Center" IsChecked="{Binding IntgrStatus, Mode=TwoWay}" VerticalAlignment="Center"/>

                            </Grid>
                        </Border>

                    </Grid>
                    <Grid Grid.Row="4" Opacity="{Binding Spotify_Opacity}">
                        <Border Margin="6" CornerRadius="5" Background="DarkSlateBlue" >
                            <Border.Effect>
                                <DropShadowEffect Color="DarkBlue" RenderingBias="Quality" BlurRadius="5" ShadowDepth="0" Direction="-23" />
                            </Border.Effect>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="85"/>
                                    <ColumnDefinition Width="440"/>
                                    <ColumnDefinition Width="123"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="Spotify"                                       
                                         Foreground="White"
                                         FontSize="20"
                                         FontFamily="Comfortaa Light" VerticalAlignment="Center" Margin="0,8,0,0"/>
                                    <TextBlock Grid.Row="1" Text="This intergration will show the playing song title and artist, It will also show 
                                               if the song is paused."                                       
                                         Foreground="LightGray"
                                         FontSize="13"
                                         FontFamily="Comfortaa Light" VerticalAlignment="Center" TextWrapping="Wrap" Margin="0,0,0,5"/>

                                </Grid>

                                <Image Grid.Column="0" Margin="15" Source="/Img/Icons/spotify_ico.png" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <CheckBox Style="{DynamicResource Switch}" Name="Spotify_switch" Grid.Column="2" Click="Update_Click" HorizontalAlignment="Center" IsChecked="{Binding IntgrScanSpotify, Mode=TwoWay}" VerticalAlignment="Center"/>

                            </Grid>
                        </Border>

                    </Grid>
                    <Grid Grid.Row="3" Opacity="{Binding Time_Opacity}">
                        <Border Margin="6" CornerRadius="5" Background="DarkSlateBlue" >
                            <Border.Effect>
                                <DropShadowEffect Color="DarkBlue" RenderingBias="Quality" BlurRadius="5" ShadowDepth="0" Direction="-23" />
                            </Border.Effect>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="85"/>
                                    <ColumnDefinition Width="440"/>
                                    <ColumnDefinition Width="123"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="Current time"                                       
                                         Foreground="White"
                                         FontSize="20"
                                         FontFamily="Comfortaa Light" VerticalAlignment="Center" Margin="0,8,0,0"/>
                                    <TextBlock Grid.Row="1" Text="This intergration works in VR mode, it will show your local 
                                               machine time."                                       
                                         Foreground="LightGray"
                                         FontSize="13"
                                         FontFamily="Comfortaa Light" VerticalAlignment="Center" TextWrapping="Wrap" Margin="0,0,0,5"/>

                                </Grid>

                                <Image Grid.Column="0" Margin="7" Source="/Img/Icons/SystemTime_ico.png" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <CheckBox Style="{DynamicResource Switch}" Name="SystemTime_switch" Grid.Column="2" Click="Update_Click" HorizontalAlignment="Center" IsChecked="{Binding IntgrScanWindowTime, Mode=TwoWay}" VerticalAlignment="Center"/>

                            </Grid>
                        </Border>

                    </Grid>
                    <Grid Grid.Row="2" Opacity="{Binding Window_Opacity}">
                        <Border Margin="6" CornerRadius="5" Background="DarkSlateBlue" >
                            <Border.Effect>
                                <DropShadowEffect Color="DarkBlue" RenderingBias="Quality" BlurRadius="5" ShadowDepth="0" Direction="-23" />
                            </Border.Effect>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="85"/>
                                    <ColumnDefinition Width="440"/>
                                    <ColumnDefinition Width="123"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="Window activity"                                       
                                         Foreground="White"
                                         FontSize="20"
                                         FontFamily="Comfortaa Light" VerticalAlignment="Center" Margin="0,8,0,0"/>
                                    <TextBlock Grid.Row="1" Text="Shows if you are in VR or DESKTOP mode, in desktop it will show in which application you are focused."                                       
                                         Foreground="LightGray"
                                         FontSize="13"
                                         FontFamily="Comfortaa Light" VerticalAlignment="Center" TextWrapping="Wrap" Margin="0,0,0,5"/>

                                </Grid>

                                <Image Grid.Column="0" Margin="9" Source="/Img/Icons/WindowActivity_ico.png" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <CheckBox Style="{DynamicResource Switch}" Name="WindowActivity_switch" Grid.Column="2" Click="Update_Click" HorizontalAlignment="Center" IsChecked="{Binding IntgrScanWindowActivity, Mode=TwoWay}" VerticalAlignment="Center"/>

                            </Grid>
                        </Border>

                    </Grid>


                </Grid>
                <ScrollViewer Grid.Row="1" Background="#FF3B3054" Visibility="{Binding MenuItem_3_Visibility}">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="1,1" SpreadMethod="Pad">
                                    <GradientStop Color="#FF3A3053"/>
                                    <GradientStop Color="#FF40365B" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"  HorizontalAlignment="Left">
                                <TextBlock Text="Intergration options" 
                                Foreground="#FF7D7397"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" 
                                       Padding="15,0,0,0"
                            />
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="1">
                            <StackPanel Height="auto" VerticalAlignment="Top"  HorizontalAlignment="Left">
                                <CheckBox Checked="Update_Click" Unchecked="Update_Click" x:Name="OnlyShowTimeVR_checkbox" IsChecked="{Binding OnlyShowTimeVR, Mode=TwoWay}" Margin="15,15,0,15" Height="21" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Only show time in VR</CheckBox>
                                <CheckBox Checked="Update_Click" Unchecked="Update_Click" x:Name="PrefixTime_checkbox" IsChecked="{Binding PrefixTime, Mode=TwoWay}" Margin="15,0,0,15" Height="22" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Show 'My time:' in front of the time integration</CheckBox>
                                <CheckBox Checked="Update_Click" Unchecked="Update_Click" x:Name="Time24H_checkbox" IsChecked="{Binding Time24H, Mode=TwoWay}" Margin="15,0,0,15" Height="20" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">24-Hour Time Format</CheckBox>
                                <CheckBox Checked="Update_Click" Unchecked="Update_Click" x:Name="enhancedapp_checkbox" IsChecked="{Binding GetForegroundProcessNew, Mode=TwoWay}" Margin="15,0,0,15" Height="20" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Enhanced application name in Window activity integration</CheckBox>
                                <CheckBox Checked="Update_Click" Unchecked="Update_Click" x:Name="MusicIconPrefix_checkbox" IsChecked="{Binding PrefixIconMusic, Mode=TwoWay}" Margin="15,0,0,15" Height="21" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Change 'listening to:' prefix to 🎵</CheckBox>
                                <CheckBox Visibility="{Binding PrefixIconMusic, Converter={StaticResource InverseBoolToHiddenConverter}, UpdateSourceTrigger=PropertyChanged}" Checked="Update_Click" Unchecked="Update_Click" x:Name="PauseIconPrefix_checkbox" IsChecked="{Binding PauseIconMusic, Mode=TwoWay}" Margin="15,0,0,15" Height="20" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Show ⏸ when  music is paused</CheckBox>
                                <CheckBox Checked="Update_Click" Unchecked="Update_Click" x:Name="StatusIconPrefix_checkbox" IsChecked="{Binding PrefixIconStatus, Mode=TwoWay}" Margin="15,0,0,15" Height="20" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Add 💬 as prefix for the personal status</CheckBox>
                                <CheckBox Checked="Update_Click" Unchecked="Update_Click" x:Name="ChatIconPrefix_checkbox" IsChecked="{Binding PrefixChat, Mode=TwoWay}" Margin="15,0,0,15" Height="22" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Add 💬 as prefix for chat messages</CheckBox>
                                <CheckBox x:Name="ChatFX_checkbox" IsChecked="{Binding ChatFX, Mode=TwoWay}" Margin="15,0,0,15" Height="22" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Play FX sound for VRChat users when sending message</CheckBox>
                            </StackPanel>
                        </Grid>

                        <Grid Grid.Row="2">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="1,1" SpreadMethod="Pad">
                                    <GradientStop Color="#FF3A3053"/>
                                    <GradientStop Color="#FF40365B" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"  HorizontalAlignment="Left">
                                <TextBlock Text="IntelliChat" 
                                Foreground="#FF7D7397"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" 
                                       Padding="15,0,0,0"
                            />
                                <TextBlock x:Name="LearnMoreAboutIntelliChatAI" MouseUp="LearnMoreAboutIntelliChatAI_MouseUp" Cursor="Hand" Text="Learn more about OpenAI" 
                       Foreground="#FF31B7B4"
                       FontSize="12"
                       FontFamily="Albert Sans Thin" Padding="10,0,0,0" HorizontalAlignment="Center"  Width="auto" VerticalAlignment="Center" TextDecorations="Underline" />
                                <TextBlock x:Name="IntelliChatAIapiPage" MouseUp="IntelliChatAIapiPage_MouseUp" Cursor="Hand" Text="Generate API key" 
                       Foreground="#FF31B7B4"
                       FontSize="12"
                       FontFamily="Albert Sans Thin" Padding="10,0,0,0" HorizontalAlignment="Center"  Width="auto" VerticalAlignment="Center" TextDecorations="Underline" />
                                <TextBlock x:Name="OpenAITerms" MouseUp="OpenAITerms_MouseUp" Cursor="Hand" Text="OpenAI terms" 
                       Foreground="#FF847E94"
                       FontSize="12"
                       FontFamily="Albert Sans Thin" Padding="10,0,0,0" HorizontalAlignment="Center"  Width="auto" VerticalAlignment="Center"  />
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="3">
                            <StackPanel Height="auto" Width="auto" VerticalAlignment="Top" HorizontalAlignment="Left">
                                <CheckBox  x:Name="IntelliChat_Enable" IsChecked="{Binding IntgrIntelliChat, Mode=TwoWay}" Margin="15,15,0,15" Height="21" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Enable IntelliChat</CheckBox>
                                <CheckBox Visibility="{Binding IntgrIntelliChat, Converter={StaticResource InverseBoolToHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"  x:Name="IntelliChatModeration" IsChecked="{Binding IntelliChatModeration, Mode=TwoWay}" Margin="15,0,0,15" Height="21" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265" Content="Moderation on prompts to OpenAI"/>
                                <StackPanel Visibility="{Binding IntgrIntelliChat, Converter={StaticResource InverseBoolToHiddenConverter}, UpdateSourceTrigger=PropertyChanged}" Orientation="Horizontal" HorizontalAlignment="Left" Margin="15,0,0,15" Width="auto" Height="22">
                                    <ComboBox x:Name="IntelliChatAI_Model"  SelectionChanged="TikTokTTSVoices_combo_SelectionChanged" ItemsSource="{Binding OpenAIAPIModels, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding OpenAIAPISelectedModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="135" BorderBrush="#FF020000" Opacity="0.4" FontSize="11.5" Height="21"/>
                                    <TextBlock FontSize="16" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1"  VerticalAlignment="Center" Margin="10,0,5,0" ><Run Text="GPT Model (use GPT-3 for cheap and fast "/><Run Language="en-gb" Text="promts"/><Run Text=")"/></TextBlock>
                                </StackPanel>
                                <StackPanel Visibility="{Binding IntgrIntelliChat, Converter={StaticResource InverseBoolToHiddenConverter}, UpdateSourceTrigger=PropertyChanged}" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,15" VerticalAlignment="Center" Width="auto" Height="auto">
                                    <StackPanel Height="auto">
                                        <TextBlock Text="OpenAI API key" 
                                            Foreground="#FFB9B5C1"
                                            Grid.Column="0"
                                            FontSize="14"
                                            FontFamily="Albert Sans Thin" 
                                            Padding="15,0,0,0"/>
                                        <TextBox Background="#FF7B7195" BorderThickness="0" x:Name="OpenAIAPIUrl" Margin="15,3,0,0" Width="223" Height="26" Text="{Binding OpenAIAPIKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Padding="5,0,0,0" FontSize="15" Foreground="#FF240E54"/>
                                    </StackPanel>
                                    <Button x:Name="OpenAIAPITestConnection" Click="OpenAIAPITestConnection_ClickAsync" VerticalAlignment="Bottom" Content="Say 'Hi' to GPT" Style="{DynamicResource Status_Button_style}" Height="26" Width="85" Margin="15,15,5,0"/>
                                    <TextBlock Text="{Binding OpenAIAPITestResponse, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        VerticalAlignment="Bottom"
                                        Foreground="#FF008BFF"
                                        Grid.Column="0"
                                        FontSize="12"
                                        FontFamily="Albert Sans Thin" 
                                        Padding="5,0,0,5"
                                               Width="310"
                                        MaxWidth="200"       
                                    />
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="4">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="1,1" SpreadMethod="Pad">
                                    <GradientStop Color="#FF3A3053"/>
                                    <GradientStop Color="#FF40365B" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"  HorizontalAlignment="Left">
                                <TextBlock Text="App options" 
                                Foreground="#FF7D7397"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" 
                                       Padding="15,0,0,0"
                            />
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="5">
                            <StackPanel Height="auto" VerticalAlignment="Top"  HorizontalAlignment="Left">
                                <CheckBox x:Name="WindowOnTop_checkbox" IsChecked="{Binding Topmost, Mode=TwoWay}" Margin="15,15,0,15" Height="21" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Always on top</CheckBox>
                                <CheckBox x:Name="ToggleVoiceWithV" IsChecked="{Binding ToggleVoiceWithV, Mode=TwoWay}" Margin="15,0,0,15" Height="21" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Toggle VRChat voice with 'V'</CheckBox>
                                <StackPanel Orientation="Horizontal">
                                    <Button Click="ResetFavorites_Click" x:Name="ResetFavorites" HorizontalAlignment="Left" Content="Reset Status" Style="{DynamicResource Status_Button_style}" Height="25" Width="85" Margin="15,0,5,15"></Button>
                                    <Button Click="MakeDataDump_Click" x:Name="MakeDataDump" Content="Make data dump" Style="{DynamicResource Status_Button_style}" Height="25" Width="99" Margin="5,0,5,15"/>
                                    <Button Click="OpenConfigFolder_Click" x:Name="OpenConfigFolder" Content="Open config folder" Style="{DynamicResource Status_Button_style}" Height="25" Width="111" Margin="5,0,5,15"/>
                                    <Button Click="OpenLogFolder_Click" x:Name="OpenLogFolder" Content="Open log folder" Style="{DynamicResource Status_Button_style}" Height="25" Width="101" Margin="5,0,5,15"/>

                                </StackPanel>

                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="6">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="1,1" SpreadMethod="Pad">
                                    <GradientStop Color="#FF3A3053"/>
                                    <GradientStop Color="#FF40365B" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"  HorizontalAlignment="Left">
                                <TextBlock Text="TTS options" 
                                Foreground="#FF7D7397"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" 
                                       Padding="15,0,0,0"/>
                                <TextBlock x:Name="LearnMoreAboutTTSbtn" MouseUp="LearnMoreAboutTTSbtn_MouseUp" Cursor="Hand" Text="Learn more" 
                       Foreground="#FF31B7B4"
                       FontSize="12"
                       FontFamily="Albert Sans Thin" Padding="10,0,0,0" HorizontalAlignment="Center"  Width="auto" VerticalAlignment="Center" TextDecorations="Underline" />
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="7">
                            <StackPanel Height="auto" VerticalAlignment="Top"  HorizontalAlignment="Left">
                                <CheckBox x:Name="TTSCutOff" IsChecked="{Binding TTSCutOff, Mode=TwoWay}" Margin="15,15,0,15" Height="21" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Stop current playing TTS on new chat</CheckBox>
                                <CheckBox x:Name="TTSAutoUnmute" IsChecked="{Binding AutoUnmuteTTS, Mode=TwoWay}" Margin="15,15,0,15" Height="21" Style="{DynamicResource SettingsCheckbox}" FontSize="18" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265">Autotoggle VRChat voice on TTS</CheckBox>

                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="15,0,0,15" Width="auto" Height="22">
                                    <ComboBox SelectionChanged="PlaybackOutputDeviceComboBox_SelectionChanged" x:Name="PlaybackOutputDeviceComboBox" ItemsSource="{Binding PlaybackOutputDevices,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" DisplayMemberPath="FriendlyName" Opacity="0.4" SelectedItem="{Binding SelectedPlaybackOutputDevice, Mode=TwoWay}" Width="186" Height="25" Margin="0"/>
                                    <TextBlock FontSize="16" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" Text="TTS Output"  VerticalAlignment="Center" Margin="10,0,5,0" />
                                </StackPanel>

                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="8">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="1,1" SpreadMethod="Pad">
                                    <GradientStop Color="#FF3A3053"/>
                                    <GradientStop Color="#FF40365B" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"  HorizontalAlignment="Left">
                                <TextBlock Text="OSC options" 
                                Foreground="#FF7D7397"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" 
                                       Padding="15,0,0,0"
                            />
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="9">
                            <StackPanel Height="auto" VerticalAlignment="Top"  HorizontalAlignment="Left">
                                <TextBlock Text="Local IP address" 
                                Foreground="#FFB9B5C1"
                                Grid.Column="0"
                                FontSize="14"
                                FontFamily="Albert Sans Thin" 
                                       Padding="15,10,0,0"
                            />
                                <TextBox Background="#FF7B7195" BorderThickness="0" x:Name="OSCIPBox" Margin="15,3,0,0" Width="100" Height="26" Text="{Binding OSCIP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Padding="5,0,0,0" FontSize="15" Foreground="#FF240E54"/>
                                <TextBlock Text="Port (outgoing)" 
                                Foreground="#FFB9B5C1"
                                Grid.Column="0"
                                FontSize="14"
                                FontFamily="Albert Sans Thin" 
                                       Padding="15,10,0,0"
                            />
                                <TextBox Background="#FF7B7195" BorderThickness="0" x:Name="OSCPortOutBox" Margin="15,3,0,0" Width="100" Height="26" Text="{Binding OSCPortOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Padding="5,0,0,0" FontSize="15" Foreground="#FF240E54"/>
                                <TextBlock Text="Chat timeout" 
                                Foreground="#FFB9B5C1"
                                Grid.Column="0"
                                FontSize="14"
                                FontFamily="Albert Sans Thin" 
                                       Padding="15,10,0,0"
                            />
                                <TextBox Background="#FF7B7195" BorderThickness="0" x:Name="ScanPauseCountDown" Margin="15,3,0,0" Width="100" Height="26" Text="{Binding ScanPauseTimeout, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Padding="5,0,0,0" FontSize="15" Foreground="#FF240E54"/>


                            </StackPanel>
                        </Grid>


                    </Grid>
                </ScrollViewer>
                <Grid Grid.Row="1" Background="#FF3B3054" Visibility="{Binding MenuItem_2_Visibility}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="31"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="400"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="68"/>
                    </Grid.RowDefinitions>

                    <Grid Height="68" Width="658" HorizontalAlignment="Left"  Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="550" />
                            <ColumnDefinition Width="150" />
                        </Grid.ColumnDefinitions>
                        <Button HorizontalAlignment="Left" Click="ButtonChattingTxt_Click" x:Name="ButtonChattingTxt" Content="Send" Style="{DynamicResource Status_Button_style}" Width="94" Margin="542,14,0,14" Grid.ColumnSpan="2"/>
                        <TextBox Height="40" KeyDown="NewChattingTxt_KeyDown" TextWrapping="Wrap" TextChanged="NewChattingTxt_TextChanged" x:Name="NewChattingTxt" Text="{Binding NewChattingTxt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="8,0,55,0" Background="#FF7B7195" TextAlignment="Left" BorderThickness="0" FontSize="15" Foreground="#FF240E54" Margin="15,0,0,0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center">
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </TextBox.Resources>
                            <TextBox.Effect>
                                <DropShadowEffect Color="DarkBlue" RenderingBias="Quality" BlurRadius="5" ShadowDepth="0" Direction="-23" />
                            </TextBox.Effect>
                        </TextBox>

                        <TextBlock Text="{Binding ChatBoxCount}" 
                       Foreground="{Binding ChatBoxColor}"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Right"
                       FontSize="12"
                       FontFamily="Albert Sans Thin" Padding="0,3,0,0" Margin="0,0,7,0"/>

                        <TextBlock IsHitTestVisible="False"  Text="Send a chat message" VerticalAlignment="Center" TextAlignment="Left" FontSize="15" Height="40" Padding="8, 9, 5, 0"  Foreground="#FF3D2F5F" Margin="15,0,55,0">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=NewChattingTxt}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=NewChattingTxt, Path=IsFocused}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <Grid Background="#FF493F65" Grid.Row="1">
                        <Grid.Effect>
                            <DropShadowEffect Color="#FF7F759A" RenderingBias="Quality" Opacity="0.5"  BlurRadius="10" ShadowDepth="5" Direction="-90" />
                        </Grid.Effect>
                        <StackPanel Visibility="{Binding CountDownUI, Converter={StaticResource InverseBoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" Orientation="Horizontal" HorizontalAlignment="Stretch" >
                            <TextBlock Text="Visible for " 
                                Foreground="#FF9983AD"
                                   HorizontalAlignment="Left"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" VerticalAlignment="Center" Margin="16,0,0,0" 
                            />
                            <TextBlock Text="{Binding ScanPauseCountDown,UpdateSourceTrigger=PropertyChanged}" 
                                Foreground="#FF9983AD"
                                   HorizontalAlignment="Left"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" VerticalAlignment="Center" Margin="0,0,0,0" 
                            />
                            <TextBlock Text=" seconds" 
                                Foreground="#FF9983AD"
                                   HorizontalAlignment="Left"
                                Grid.Column="0"
                                Visibility="{Binding CountDownUI, Converter={StaticResource InverseBoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" VerticalAlignment="Center" Margin="0,0,0,0" 
                            />

                        </StackPanel>
                        <TextBlock Text="{Binding ActiveChatTxt,UpdateSourceTrigger=PropertyChanged}" 
                       Foreground="#FF6FD013"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Right"
                       FontSize="13"
                       FontFamily="Albert Sans Thin" Margin="0,3,153,0"/>
                        <Button HorizontalAlignment="Right" Click="ClearChat_Click" x:Name="ClearChat" Content="Clear history" Style="{DynamicResource Status_Button_style}" Width="80" Margin="0,5,20,5"/>
                        <Button HorizontalAlignment="Right" Click="StopChat_Click" x:Name="StopChat" Content="Stop" Style="{DynamicResource Status_Button_style}" Width="40" Margin="0,5,105,5"/>
                    </Grid>

                    <Grid Grid.Row="2">
                        <ScrollViewer Margin="7,10,0,0" Name="RecentScroll" Visibility="Visible">
                            <ItemsControl VerticalAlignment="Bottom" HorizontalAlignment="Left" ItemsSource="{Binding LastMessages,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border CornerRadius="5" Background="DarkSlateBlue" Width="620" Height="auto" BorderThickness="0" Margin="8,0,0,8" Opacity="{Binding Opacity}">
                                            <StackPanel Height="auto" VerticalAlignment="Center" Orientation="Horizontal">
                                                <TextBox BorderThickness="0" Height="Auto" Width="475" IsReadOnly="True" Background="Transparent" FontFamily="Albert Sans Thin" Text="{Binding Msg}" TextWrapping="Wrap" FontSize="16" Foreground="LightGray" Padding="15,15,0,15"/>
                                                <Button Content="Send again" HorizontalAlignment="Right" Margin="5,5,0,5" Style="{DynamicResource Status_Button_style}" Width="80" Command="{Binding SendAgainCommand}" CommandParameter="{Binding Msg}"/>
                                                <Button Content="Copy" HorizontalAlignment="Right" Margin="5" Style="{DynamicResource Status_Button_style}" Width="50" Command="{Binding CopyToClipboardCommand}" CommandParameter="{Binding Msg}"/>
                                            </StackPanel>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                    <Grid Background="#FF493F65" HorizontalAlignment="Stretch" Grid.Row="3">
                        <Grid.Effect>
                            <DropShadowEffect Color="#FF7F759A" RenderingBias="Quality" Opacity="0.5"  BlurRadius="10" ShadowDepth="5" Direction="90" />
                        </Grid.Effect>
                        <StackPanel Orientation="Horizontal">
                            <Button Visibility="{Binding IntgrIntelliChat, Converter={StaticResource InverseBoolToHiddenConverter}, UpdateSourceTrigger=PropertyChanged}" x:Name="IntgrIntelliWing_btn" Click="IntgrIntelliWing_btn_Click" Padding="3" HorizontalAlignment="Left" Style="{DynamicResource OpenAI_Button_style}" Width="39" Margin="16,3,0,3"/>
                            <TextBlock Text="{Binding ChatTopBarTxt}" 
                                Foreground="#FF9983AD"
                                   HorizontalAlignment="Left"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" VerticalAlignment="Center" Margin="10,0,0,0" Padding="0,0,50,0" 
                            />
                        </StackPanel>
                        <TextBlock Text="{Binding ChatFeedbackTxt}" 
                                Foreground="#FF9983AD"
                                   HorizontalAlignment="Right"
                                Grid.Column="0"
                                FontSize="16"
                                FontFamily="Albert Sans Thin" VerticalAlignment="Center" Margin="0,0,16,0" 
                            />

                    </Grid>
                </Grid>
                
                <Grid Background="#FF42385D" Grid.Row="1" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="Preview" 
                       Foreground="White"
                       Grid.Column="0"
                       FontSize="16"
                       FontFamily="Albert Sans Thin" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding OSCmsg_countUI}" 
                       Foreground="#FF8D7DB9"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Right"
                       FontSize="12"
                       FontFamily="Albert Sans Thin" Margin="0,0,10,0"/>

                    <TextBox MaxLength="144" Background="#FF7F759A" Text="{Binding OSCtoSent}" 
                       Foreground="#FFDFDDE2"
                       Grid.Row="1"
                       VerticalAlignment="Top"
                       HorizontalAlignment="Stretch"
                       Padding="8,5,8,5"
                               
                       FontSize="13"
                       FontFamily="Albert Sans Thin" TextAlignment="Center" Margin="5,0,5,0" TextWrapping="Wrap" Height="150" Focusable="False" AllowDrop="False" IsHitTestVisible="False" IsTabStop="False" IsReadOnly="True" BorderThickness="0"/>


                    <StackPanel Grid.Row="1" Margin="0,155,0,0" HorizontalAlignment="Right" VerticalAlignment="Top">

                        <StackPanel  Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5,5"  Width="auto" Height="auto">
                            <Button local:ButtonProperties.ShadowTrigger="{Binding TTSBtnShadow}" Click="ToggleVoicebtn_Click" x:Name="ToggleVoicebtn" Content="{Binding ToggleVoiceText}" Style="{DynamicResource Status_Button_style_Shadow}" Height="27" Width="101"/>
                        </StackPanel>


                        <StackPanel  Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5"  Width="80" Height="20">
                            <TextBlock FontSize="13" Text="TopMost" FontFamily="Albert Sans Thin" VerticalAlignment="Center" Margin="0,0,5,0" Foreground="#FF7D7397"/>
                            <CheckBox IsChecked="{Binding Topmost, Mode=TwoWay}" Style="{DynamicResource SettingsCheckbox}" FontSize="12" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265" Width="20"/>
                        </StackPanel>

                        <StackPanel Visibility="{Binding MenuItem_2_Visibility}" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5"  Width="112" Height="20">
                            <TextBlock FontSize="13" Text="Text to speech" FontFamily="Albert Sans Thin" VerticalAlignment="Center" Margin="0,0,5,0" Foreground="#FF7D7397"/>
                            <CheckBox IsChecked="{Binding TTSTikTokEnabled, Mode=TwoWay}" Style="{DynamicResource SettingsCheckbox}" FontSize="12" FontFamily="Comfortaa Light" Foreground="#FFB9B5C1" BorderBrush="#FF2D1265" Width="20"/>
                        </StackPanel>

                        <StackPanel Visibility="{Binding TTSTikTokEnabled, Converter={StaticResource InverseBoolToHiddenConverter}, UpdateSourceTrigger=PropertyChanged}">
                            <StackPanel Visibility="{Binding MenuItem_2_Visibility}" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5" Width="176" Height="22">
                                <TextBlock FontSize="13" Text="Voice" FontFamily="Albert Sans Thin" VerticalAlignment="Center" Margin="0,0,5,0" Foreground="#FF7D7397"/>
                                <ComboBox x:Name="TikTokTTSVoices_combo" SelectionChanged="TikTokTTSVoices_combo_SelectionChanged" ItemsSource="{Binding TikTokTTSVoices, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayName"  SelectedValuePath="ApiName" Width="135" BorderBrush="#FF020000" Opacity="0.4" FontSize="11.5" Height="21"/>
                            </StackPanel>

                            <StackPanel Visibility="{Binding MenuItem_2_Visibility}" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,0" Width="211" Height="22">
                                <TextBlock FontSize="13" Text="TTS volume" FontFamily="Albert Sans Thin" VerticalAlignment="Center" Margin="0,0,0,3" Foreground="#FF7D7397" Width="69"/>
                                <Slider x:Name="VolumeSlider" Style="{StaticResource CustomSlider}" Margin="2.2,0,4.5,0" Width="134.5" Minimum="0" Maximum="1" Value="{Binding Path=TTSVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="12" />
                            </StackPanel>
                        </StackPanel>

                    </StackPanel>
                    <Grid Grid.Row="3" Height="45" VerticalAlignment="Bottom">
                        <TextBlock Text="{Binding UpdateStatustxt}" 
                       Foreground="#FF7D7397"
                       FontSize="12"
                       FontFamily="Albert Sans Thin"  HorizontalAlignment="Center" VerticalAlignment="Stretch" />
                        <TextBlock x:Name="GitHubChanges" MouseUp="GitHubChanges_MouseUp" Cursor="Hand" Visibility="{Binding CanUpdate, Converter={StaticResource InverseBoolToHiddenConverter}, UpdateSourceTrigger=PropertyChanged}" Text="View changes on GitHub" 
                       Foreground="#FF31B7B4"
                       FontSize="10"
                       FontFamily="Albert Sans Thin" HorizontalAlignment="Center"  Width="auto" TextDecorations="Underline" />
                        <StackPanel  VerticalAlignment="Bottom" Orientation="Horizontal" HorizontalAlignment="Center">

                            <TextBlock Text="{Binding AppVersion.VersionNumber}" 
                       Foreground="#FF7D7397"
                       FontSize="12"
                       FontFamily="Albert Sans Thin" HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="5,0.5,5,5" />
                            <TextBlock  Name="NewVersion" Text="{Binding VersionTxt}" 
                       Foreground="{Binding VersionTxtColor}"
                       FontSize="12"
                       FontFamily="Albert Sans Thin" HorizontalAlignment="Left" VerticalAlignment="Bottom" MouseUp="NewVersion_MouseUp" Margin="0,0,5,8" TextDecorations="Underline" Cursor="Hand"/>
                        </StackPanel>
                    </Grid>

                </Grid>
            </Grid>
        </Border>
       
    </Grid>
</Window>
    



